<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community.dao.LetterMapper">
    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <select id="selectLetters" resultType="Letter">
        SELECT
        <include refid="selectFields"/>
        FROM message m
        INNER JOIN (
        SELECT
        MIN(id) AS min_id
        FROM message
        WHERE
        status != 2
        AND to_id = #{userId}
        AND conversation_id NOT IN ('comment', 'like', 'follow')
        GROUP BY conversation_id
        ORDER BY MIN(create_time)
        LIMIT #{offset}, #{limit}
        ) AS subquery ON m.id = subquery.min_id
    </select>


    <select id="selectNotices" resultType="Letter">
        select <include refid="selectFields"></include>
        from message
        where status != 2
        and to_id = #{userId}
        and conversation_id = #{conversationId}
        order by create_time desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectLetterDetails" resultType="Letter">
        select <include refid="selectFields"></include>
        from message
        where status != 2
        and from_id = #{fromId}
        and to_id = #{toId}
        order by create_time desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectLetterById" resultType="Letter">
        select <include refid="selectFields"></include>
        from message
        where id = #{id}
    </select>

    <select id="getLetterCountById" resultType="int">
        select count(id)
        from message
        where status != 2
        and from_id = #{fromId}
        and to_id = #{toId}
    </select>

    <select id="getLetterCount" resultType="int">
        SELECT COUNT(DISTINCT conversation_id)
        FROM message
        WHERE
        to_id = #{userId}
        AND status != 2
        AND conversation_id NOT IN ('comment', 'like', 'follow');
    </select>


    <select id="getTotalLetter" resultType="int">
        select count(id)
        from message
        where
        to_id = #{userId}
        AND status != 2
        <choose>
            <when test="conversationId == 'notice'">
                and conversation_id IN ('comment', 'like', 'follow');
            </when>
            <when test="conversationId == 'letter'">
                and conversation_id NOT IN ('comment', 'like', 'follow');
            </when>
            <when test="conversationId == 'total'">

            </when>
            <otherwise>
                and conversation_id = #{conversationId}
            </otherwise>
        </choose>
    </select>

    <select id="selectLatestNotice" resultType="Letter">
        select <include refid="selectFields"></include>
        from message
        where to_id = #{userId}
        and conversation_id = #{conversationId}
        order by create_time desc
        limit 1
    </select>

</mapper>